//
//  main.cpp
//  vasilenko_cpp_lab_14_game
//
//  Created by Evgeny Wisealienko on 01.06.2021.
//

#include <iostream>
#include <conio.h>
	
using namespace std;

bool gameOver;
const int width = 20;
const int height = 20;
int x,y, fruitx, fruity, score;
int tailx[100], taily[100];
int ntail;
enum eDirection { STOP = 0, LEFT, RIGHT, UP, DOWN };
eDirection dir;


void Setup() {
    gameOver = false;
    dir = STOP;
    x = width / 2 - 1;
    y = height / 2 - 1	;
    fruitx = rand() % width;
    fruity = rand() % height;
    score = 0;
}


void Draw(){
    system("cls");
    for(int i = 0; i < width + 1; i++)
        cout << "#";
    cout << endl;
    
    for(int i = 0; i < height; i++){
        for (int j = 0; j < width; j++){
            if (j == 0 || j == width - 1)
                cout << "#";
            if (i == y && j == x)
                cout << "0";
            else if (i == fruity && j == fruitx)
                cout << "F";
            else {
                bool print = false;
                for (int k = 0; k < ntail; k++) {
                    if (tailx[k] == j && taily[k] == i) {
                        print = true;
                        cout << "o";
                    }
                }
                if (!print)
                    cout << " ";
            }
        }
        cout << endl;
    }
    
    for(int i = 0; i < width + 1; i++)
        cout << "#";
    cout << endl;
    cout << "Score: " << score << endl;
}


void Input() {
    if (_kbhit()) {
        switch (_getch ())
        {
        case 'a':
            dir = LEFT;
            break;
        case 'd':
            dir = RIGHT;
            break;
        case 's':
            dir = DOWN;
        case 'w':
            dir = UP;
            break;
        case 'x':
            gameOver = true;
            break;
        }
    }
}


void Logic(){
    int prevx = tailx[0];
    int prevy = taily[0];
    int prev2x, prev2y;
    tailx[0] = x;
    taily[0] = y;
    for (int i = 1; i < ntail; i++) {
        prev2x = tailx[i];
        prev2y = taily[i];
        tailx[i] = prevx;
        taily[i] = prevy;
        prevx = prev2x;
        prevy = prev2y;
    }
    switch (dir) {
    case LEFT:
        x--;
        break;
    case RIGHT:
        x++;
        break;
    case UP:
        y--;
        break;
    case DOWN:
        y++;
        break;
    }
    
    if (x >= width - 1)
        x = 0;
    else if (x < 0)
        x = width - 2;
    
    if (y >= height - 1)
        y = 0;
    else if (y < 0)
        y = height - 2;
    
    for (int i = 0; i < ntail; i++) {
        if (tailx[i] == x && taily[i] == y)
            gameOver = true;
    }
    
    if (x == fruitx && y == fruity) {
        score += 10;
        fruitx = rand() % width;
        fruity = rand() % height;
        ntail++;
    }
}


int main(){
    Setup();
    while (!gameOver){
        Draw();
        Input();
        Logic();
    }
  return 0;
}
